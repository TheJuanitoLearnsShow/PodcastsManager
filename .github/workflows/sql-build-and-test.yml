name: Build SQL project and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: Release
  SQL_PROJ_NAME: PodcastsManagerDb
  TEST_DB_CONN_STR: Data Source=.\sqlExpress;Database=AutomatedTESTS_PodcastsManager;Integrated Security=True;TrustServerCertificate=True

permissions:
  contents: read

defaults:

jobs:
  build:
    runs-on: [self-hosted]
    defaults:
      run:
        working-directory: src\PodcastsManager\2-Data\PodcastsManagerDb\
    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
        dotnet-version: 9.0.x

    - name: Install SqlPackage Tool
      run: dotnet tool install -g microsoft.sqlpackage

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild "${{env.PROJ_FILE_NAME}}.sqlproj" /p:Configuration=${{env.BUILD_CONFIGURATION}} 
    
    - name: Publish
      # For more details on the options for SqlPackage, see https://learn.microsoft.com/en-us/sql/tools/sqlpackage/sqlpackage-publish 
      run: SqlPackage /Action:Publish /SourceFile:".\bin\release\${{env.PROJ_FILE_NAME}}.dacpac" /TargetConnectionString:"${{env.TEST_DB_CONN_STR}}" /p:DropObjectsNotInSource=True /p:ScriptDatabaseCompatibility=True /p:BlockOnPossibleDataLoss=False


  test:
    runs-on: [self-hosted]
    needs: build
    defaults:
      run:
        working-directory: src\PodcastsManager\7-Tests\DatabaseTestRunner
    steps:
      - name: Automated Test
        run: dotnet test
          
          