/*
Deployment script for AutomatedTESTS_PodcastsManager

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AutomatedTESTS_PodcastsManager"
:setvar DefaultFilePrefix "AutomatedTESTS_PodcastsManager"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EpisodesPublished_PodcastsGuests]...';


GO
ALTER TABLE [dbo].[EpisodesPublished] DROP CONSTRAINT [FK_EpisodesPublished_PodcastsGuests];


GO
PRINT N'Dropping Check Constraint [dbo].[CK_PodcastGuests_Rating]...';


GO
ALTER TABLE [dbo].[PodcastGuests] DROP CONSTRAINT [CK_PodcastGuests_Rating];


GO
PRINT N'Starting rebuilding table [dbo].[PodcastGuests]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PodcastGuests] (
    [GuestId]    [dbo].[GuestId]   NOT NULL,
    [GuestName]  [dbo].[GuestName] NOT NULL,
    [GuestBio]   VARCHAR (400)     DEFAULT ('') NOT NULL,
    [ChefRating] [dbo].[Rating]    NOT NULL,
    PRIMARY KEY CLUSTERED ([GuestId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PodcastGuests])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_PodcastGuests] ([GuestId], [GuestName], [ChefRating])
        SELECT   [GuestId],
                 [GuestName],
                 [ChefRating]
        FROM     [dbo].[PodcastGuests]
        ORDER BY [GuestId] ASC;
    END

DROP TABLE [dbo].[PodcastGuests];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PodcastGuests]', N'PodcastGuests';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EpisodesPublished_PodcastsGuests]...';


GO
ALTER TABLE [dbo].[EpisodesPublished] WITH NOCHECK
    ADD CONSTRAINT [FK_EpisodesPublished_PodcastsGuests] FOREIGN KEY ([GuestId]) REFERENCES [dbo].[PodcastGuests] ([GuestId]);


GO
PRINT N'Creating Check Constraint [dbo].[CK_PodcastGuests_Rating]...';


GO
ALTER TABLE [dbo].[PodcastGuests] WITH NOCHECK
    ADD CONSTRAINT [CK_PodcastGuests_Rating] CHECK ([ChefRating] between 0 and 5);


GO
PRINT N'Refreshing View [api].[vEpisodesAndGuests]...';


GO
EXECUTE sp_refreshsqlmodule N'[api].[vEpisodesAndGuests]';


GO
PRINT N'Refreshing Procedure [api].[spIssuePayment]...';


GO
EXECUTE sp_refreshsqlmodule N'[api].[spIssuePayment]';


GO
PRINT N'Refreshing Procedure [tests].[spTest_EpisodeXml]...';


GO
EXECUTE sp_refreshsqlmodule N'[tests].[spTest_EpisodeXml]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[EpisodesPublished] WITH CHECK CHECK CONSTRAINT [FK_EpisodesPublished_PodcastsGuests];

ALTER TABLE [dbo].[PodcastGuests] WITH CHECK CHECK CONSTRAINT [CK_PodcastGuests_Rating];


GO
PRINT N'Update complete.';


GO
