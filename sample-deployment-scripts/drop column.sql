/*
Deployment script for AutomatedTESTS_PodcastsManager

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AutomatedTESTS_PodcastsManager"
:setvar DefaultFilePrefix "AutomatedTESTS_PodcastsManager"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[EpisodesPublished].[Description] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[EpisodesPublished])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Check Constraint [dbo].[CK_PodcastGuests_Rating]...';


GO
ALTER TABLE [dbo].[PodcastGuests] DROP CONSTRAINT [CK_PodcastGuests_Rating];


GO
PRINT N'Altering Table [dbo].[EpisodesPublished]...';


GO
ALTER TABLE [dbo].[EpisodesPublished] DROP COLUMN [Description];


GO
PRINT N'Creating Check Constraint [dbo].[CK_PodcastGuests_Rating]...';


GO
ALTER TABLE [dbo].[PodcastGuests] WITH NOCHECK
    ADD CONSTRAINT [CK_PodcastGuests_Rating] CHECK ([ChefRating] between 0 and 5);


GO
PRINT N'Altering View [api].[vEpisodesAndGuests]...';


GO
ALTER VIEW [api].[vEpisodesAndGuests]
AS
SELECT [EpisodeId]
	,[Title]
	--,[Description]
	,[PublishedOn]
	,[Url]
	,[Duration]
	,[AudioFileSize]
	,g.[GuestId]
	,g.[GuestName]
	,g.[ChefRating]
FROM dbo.EpisodesPublished e
INNER JOIN dbo.PodcastGuests g ON e.GuestId = g.GuestId
GO
PRINT N'Altering Function [dbo].[fnGetEpisodesRssXml]...';


GO
ALTER FUNCTION [dbo].[fnGetEpisodesRssXml]
(
	@StartEpisodeId [EpisodeId],
	@EndEpisodeId [EpisodeId]
)
RETURNS TABLE AS RETURN
( 

    WITH XMLNAMESPACES (
        'http://www.itunes.com/dtds/podcast-1.0.dtd' AS itunes
    )
    SELECT 
        (
            SELECT 
                e.EpisodeId AS 'guid',
                e.[Url] AS 'enclosure/@url',
                'audio/mpeg' AS 'enclosure/@type',
                e.[AudioFileSize] AS 'enclosure/@length',
                '1' AS 'itunes:season',
                e.EpisodeId AS 'itunes:episode',
                FORMAT(e.PublishedOn, 'ddd, dd MMM yyyy HH:mm:ss ''EST''') AS 'pubDate',
                e.[Title] AS 'title',
                --e.[Description] AS 'description',
                '00:' + format(e.Duration, '00') + ':00' AS 'itunes:duration',
                'false' AS 'itunes:explicit',
                'full' AS 'itunes:episodeType'
            FROM EpisodesPublished e
            WHERE e.EpisodeId BETWEEN @StartEpisodeId AND @EndEpisodeId
            FOR XML PATH('item'), TYPE
        ) AS EpisodeXml
)
GO
PRINT N'Altering Procedure [tests].[spTest_EpisodeXml]...';


GO
ALTER PROCEDURE [tests].[spTest_EpisodeXml]
AS
BEGIN
	SET NOCOUNT ON;
	SET XACT_ABORT ON;

	BEGIN TRY
		BEGIN TRANSACTION;

		--Arrange 
		DECLARE @EpisodeXml VARCHAR(MAX);

		--- clear data and add one episode
		DELETE dbo.PodcastGuests;
		DELETE dbo.EpisodesPublished;
		
		INSERT dbo.PodcastGuests (
			[GuestId]
			,[GuestName]
			,[ChefRating]
			)
		select 1,
			'Tarquino',
			5;

		INSERT dbo.EpisodesPublished (
			[EpisodeId]
			,[Title]
			--,[Description]
			,[PublishedOn]
			,[Url]
			,[Duration]
			,[AudioFileSize]
			,[GuestId]
			)
		SELECT 1
			,'Test Title'
			,'Test Description'
			,'2025-01-01 13:00'
			,'http://url'
			,30
			,56789
			,1;

		-- Act
		SELECT @EpisodeXml = CONVERT(VARCHAR(MAX), x.EpisodeXml)
		FROM dbo.[fnGetEpisodesRssXml](0, 99999) x;

		-- Assert
		SELECT *
		FROM dbo.EpisodesPublished;

		SELECT @EpisodeXml XmlProduced;

		DECLARE @dateWrongMsg VARCHAR(512) = CASE 
				WHEN @EpisodeXml LIKE '%Wed%'
				--WHEN @EpisodeXml LIKE '%make it fail%'
					THEN NULL
				ELSE 'Date is not properly formated: ' + @EpisodeXml
				END;

		SELECT 'Is Date Formated Correctly' [TestDescription]
			,CASE 
				WHEN @dateWrongMsg IS NULL
					THEN 'PASS'
				ELSE 'FAIL'
				END [TestResult]
			,@dateWrongMsg [TestOutcomeExplanation]

		ROLLBACK TRANSACTION;
	END TRY

	BEGIN CATCH
		-- opportunity to retry the transaction.
		IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRANSACTION;
		END

		DECLARE @ErrorMessage NVARCHAR(4000);
		DECLARE @ErrorSeverity INT;
		DECLARE @ErrorState INT;

		SELECT @ErrorMessage = ERROR_MESSAGE()
			,@ErrorSeverity = ERROR_SEVERITY()
			,@ErrorState = ERROR_STATE();

		RAISERROR (
				@ErrorMessage
				,@ErrorSeverity
				,@ErrorState
				);
	END CATCH
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[PodcastGuests] WITH CHECK CHECK CONSTRAINT [CK_PodcastGuests_Rating];


GO
PRINT N'Update complete.';


GO
