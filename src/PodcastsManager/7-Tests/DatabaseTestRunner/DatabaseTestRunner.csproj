<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <IsPackable>false</IsPackable>
        <IsTestProject>true</IsTestProject>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="coverlet.collector" Version="6.0.4">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Data.SqlClient" Version="6.1.1" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.14.1" />
        <PackageReference Include="xunit" Version="2.9.3" />
        <PackageReference Include="xunit.runner.visualstudio" Version="3.1.4">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <Using Include="Xunit" />
    </ItemGroup>

    <!-- Run the SDK DB publish script before tests. This will execute
         2-Data\PodcastsManagerSDKDb\publish-to-local-sqlexpress.bat with
         its working directory set so the script's relative paths resolve.
         The Exec only runs if the script exists; otherwise a warning is logged. -->
    <Target Name="PublishSdkDbBeforeTests" BeforeTargets="VSTest;Test">
      <PropertyGroup>
        <SdkDbPublishScript>$(MSBuildThisFileDirectory)..\..\2-Data\PodcastsManagerSDKDb\publish-to-local-sqlexpress.bat</SdkDbPublishScript>
        <SdkDbPublishDir>$(MSBuildThisFileDirectory)..\..\2-Data\PodcastsManagerSDKDb</SdkDbPublishDir>
      </PropertyGroup>

      <Message Importance="high" Text="Checking for SDK DB publish script at '$(SdkDbPublishScript)'..." />

      <!-- Run the script if it exists -->
      <Exec Command="&quot;$(SdkDbPublishScript)&quot;" WorkingDirectory="$(SdkDbPublishDir)" Condition="Exists('$(SdkDbPublishScript)')" />

      <!-- Warn (but continue) if the script wasn't found -->
      <Message Importance="high" Text="Publish script not found at '$(SdkDbPublishScript)'. Skipping SDK DB publish." Condition="!Exists('$(SdkDbPublishScript)')" />
    </Target>

</Project>
